//  Created by Devine Lu Linvega.
//  Copyright Â© 2017 XXIIVV. All rights reserved.

class SceneLabel extends SceneLine
{
  constructor(text = "", scale = 0.1, align = Alignment.left, color = verreciel.white)
  {
    // assertArgs(arguments, 1);
    super([], color);
    
    this.activeText = text;
    this.activeScale = scale;
    this.activeAlignment = align;

    this.redrawLetters(this.activeText, this.activeScale);
  }
  
  updateText(text, color = null)
  {
    // assertArgs(arguments, 1);

    if (text == null)
    {
      text = this.activeText;
    }

    if (color == null)
    {
      color = this.color;
    }
    
    if (this.activeText != text || !this.color.equals(color))
    {
      this.activeText = text;
      this.color = color;
      this.redrawLetters(this.activeText, this.activeScale);
    }
  }
  
  updateScale(scale)
  {
    // assertArgs(arguments, 1);
    if (this.activeScale != scale)
    {
      this.activeScale = scale;
      this.redrawLetters(this.activeText, this.activeScale);
    }
  }
  
  redrawLetters(text, scale)
  {
    // assertArgs(arguments, 2);

    var letterPos = 0;
    var linePos = 0;

    var alignmentOffset = 0;
    if (this.activeAlignment == Alignment.center)
    {
      let wordLength = this.activeText.length * this.activeScale * 1.5;
      alignmentOffset = -wordLength * 0.5;
    }
    else if (this.activeAlignment == Alignment.right)
    {
      let wordLength = this.activeText.length * this.activeScale * 1.5;
      alignmentOffset = -wordLength + this.activeScale * 0.5;
    }

    let vertices = [];

    for (let letterCur of text)
    {
      if (letterCur == "$")
      {
        linePos += 1;
        letterPos = 0;
        continue;
      }
      this.appendLetter(vertices, letterCur, scale, scale * 1.5 * letterPos + alignmentOffset, scale * linePos * -4.15, 0);
      letterPos += 1;
    }
    
    this.updateVertices(vertices);
  }
  
  appendLetter(vertices, char, scale, offsetX, offsetY)
  {
    // assertArgs(arguments, 2);

    var dictVertices = SceneLabel.letterDictionary[char.toLowerCase()];
    if (dictVertices == null)
    {
      console.warn("Bad letter: [" + char.toLowerCase() + "]");
    }
    else
    {
      for (let coords of dictVertices)
      {
        var vertex = (new THREE.Vector3()).fromArray(coords);
        vertex.x = vertex.x * scale + offsetX;
        vertex.y = vertex.y * scale + offsetY;
        vertices.push(vertex);
      }
    }
  }
}

SceneLabel.letterDictionary = function() { return {
  "a":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "b":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "c":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "d":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0, -1.0,  0.0]],
  "e":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0]],
  "f":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0]],
  "g":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.5,  0.0,  0.0], [ 1.0,  0.0,  0.0]],
  "h":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "i":[[ 0.5,  1.0,  0.0], [ 0.5, -1.0,  0.0]],
  "j":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.5,  1.0,  0.0], [ 0.5, -1.0,  0.0], [ 0.5, -1.0,  0.0], [ 0.0, -1.0,  0.0]],
  "k":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0, -1.0,  0.0]],
  "l":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "m":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.5,  1.0,  0.0], [ 0.5,  0.0,  0.0]],
  "n":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "o":[[ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0]],
  "p":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.0,  0.0,  0.0]],
  "q":[[ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.5,  0.0,  0.0], [ 1.0, -1.0,  0.0]],
  "r":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.0,  0.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0, -1.0,  0.0]],
  "s":[[ 0.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0, -1.0,  0.0]],
  "t":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.5,  1.0,  0.0], [ 0.5, -1.0,  0.0]],
  "u":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  1.0,  0.0]],
  "v":[[ 0.0,  1.0,  0.0], [ 0.5, -1.0,  0.0], [ 0.5, -1.0,  0.0], [ 1.0,  1.0,  0.0]],
  "w":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.5,  0.0,  0.0], [ 0.5, -1.0,  0.0]],
  "x":[[ 0.0,  1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0,  1.0,  0.0]],
  "y":[[ 0.0,  1.0,  0.0], [ 0.5,  0.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.5,  0.0,  0.0], [ 0.5,  0.0,  0.0], [ 0.5, -1.0,  0.0]],
  "z":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "1":[[ 0.5,  1.0,  0.0], [ 0.5, -1.0,  0.0]],
  "2":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.0,  0.0,  0.0], [ 0.0,  0.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "3":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "4":[[ 0.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "5":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "6":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.0,  0.0,  0.0]],
  "7":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "8":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0]],
  "9":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0]],
  "0":[[ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0,  1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0]],
  ":":[[ 0.5,  0.5,  0.0], [ 0.5, -0.5,  0.0]],
  " ":[],
  "~":[],
  "/":[[ 0.0, -1.0,  0.0], [ 1.0,  1.0,  0.0]],
  "-":[[ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0]],
  "&":[[ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.5,  1.0,  0.0], [ 0.5, -1.0,  0.0]],
  "+":[[ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.5,  1.0,  0.0], [ 0.5, -1.0,  0.0]],
  ">":[[ 0.0,  1.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.0, -1.0,  0.0], [ 1.0,  0.0,  0.0]],
  "<":[[ 1.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.0,  0.0,  0.0]],
  "]":[[ 0.5,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0, -1.0,  0.0], [ 0.5, -1.0,  0.0]],
  "[":[[ 0.5,  1.0,  0.0], [ 0.0,  1.0,  0.0], [ 0.0,  1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.0, -1.0,  0.0], [ 0.5, -1.0,  0.0]],
  ",":[[ 0.5,  0.0,  0.0], [ 0.5, -1.0,  0.0]],
  "?":[[ 0.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  1.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 0.5,  0.0,  0.0], [ 0.5,  0.0,  0.0], [ 0.5, -1.0 / 4,  0.0], [ 0.5, -1.0 / 2,  0.0], [ 0.5, -1.0,  0.0]],
  ".":[[ 0.5,  0.0,  0.0], [ 0.5, -1.0,  0.0]],
  "'":[[ 0.5,  1.0,  0.0], [ 0.5,  0.0,  0.0]],
  "%":[[ 0.0,  1.0,  0.0], [ 0.0,  0.0,  0.0], [ 1.0,  0.0,  0.0], [ 1.0, -1.0,  0.0], [ 1.0,  1.0,  0.0], [ 0.0, -1.0,  0.0]]
}}();
